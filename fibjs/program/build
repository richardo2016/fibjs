#!/bin/bash

DIR=`pwd`;
FIBJS_ROOT=$DIR/../..

. $FIBJS_ROOT/vender/scripts/get_env.sh --source-only

get_build_env "$@";

. $FIBJS_ROOT/vender/build

if [ "${TARGET_OS}" != "Windows" ] && [ "${BUILD_TYPE}" = "release" ]; then
	PROGRAM_SRC_PATH=$FIBJS_ROOT/fibjs/program
	BIN_PATH=$FIBJS_ROOT/bin/${TARGET_OS}_${TARGET_ARCH}_${BUILD_TYPE}

	cd "${BIN_PATH}"
	cp "${PROGRAM_SRC_PATH}/installer.txt" "installer.sh"
	tar -zcf fibjs.tar.gz fibjs
	echo '[100%] Built target fibjs.tar.gz'
	cat fibjs.tar.gz >> installer.sh
	chmod 777 installer.sh
	echo '[100%] Built target install.sh'

	if [ $TARGET_OS = "Linux" ]; then
		case $TARGET_ARCH in
			arm) BUILD_PREFIX="arm-linux-gnueabihf-"
				;;
			arm64) BUILD_PREFIX="aarch64-linux-gnu-"
				;;
			mips) BUILD_PREFIX="mips-linux-gnu-"
				;;
			mips64) BUILD_PREFIX="mips64-linux-gnuabi64-"
				;;
			ppc) BUILD_PREFIX="powerpc-linux-gnu-"
				;;
			ppc64) BUILD_PREFIX="powerpc64-linux-gnu-"
				;;
		esac

		echo ''
		echo '==== GLIBC ===='
		${BUILD_PREFIX}objdump fibjs -p | grep GLIBCX*_[0-9.]* -o | sort | uniq
	fi

	if [ "${CI}" = "ci" ]; then
		xz -cz -T2 fibjs > fibjs.xz
		echo '[100%] Built target fibjs.xz'
	fi
fi