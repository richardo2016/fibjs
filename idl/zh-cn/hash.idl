/*! @brief hash 模块主要用于实现消息摘要算法，是实现加密算法中，非常重要的一个子模块。同时，消息摘要算法也是许多加密算法的基础。

在使用 `hash` 子模块之前，需要使用 `require('hash');` 加载该模块。

在 `hash` 模块中，主要包含以下几个类 `Digest`、`Hmac`。其中，`Digest` 类用于计算消息摘要算法，`Hmac` 类用于计算带密钥的哈希消息。 

以下是一个简单的使用 `Digest` 类计算 `MD5` 摘要的示例代码：

```javascript
const hash = require('hash');

// create a MD5 digest object
const digest = hash.digest(hash.MD5);

// update digest with data
const data = 'hello, world';
digest.update(data);

// output result in hex
const result = digest.digest('hex');
console.log(result);
```

在以上示例代码中，我们首先使用 `hash.digest(hash.MD5)` 将一个 `Digest` 对象初始化为 `MD5` 模式。然后，我们使用 `update()` 方法向 Digest 对象添加需要进行摘要计算的数据。接着，我们使用 `digest()` 方法计算摘要结果，并返回通过参数指定的编码方式（这里使用的是 十六进制编码）。最后，输出计算出的摘要结果。

除了 `MD5` 以外，`Digest` 类还支持其他摘要算法，比如 `SHA-1`、`SHA-256`、`SHA-512`等。 在使用时需要将 `md5` 参数改成对应的摘要算法即可。
*/
module hash
{
    /*! @brief MD5 信息摘要算法标识常量 */
    const MD5 = 1;

    /*! @brief SHA1 信息摘要算法标识常量 */
    const SHA1 = 2;

    /*! @brief SHA224 信息摘要算法标识常量 */
    const SHA224 = 3;

    /*! @brief SHA256 信息摘要算法标识常量 */
    const SHA256 = 4;

    /*! @brief SHA384 信息摘要算法标识常量 */
    const SHA384 = 5;

    /*! @brief SHA512 信息摘要算法标识常量 */
    const SHA512 = 6;

    /*! @brief RIPEMD160 信息摘要算法标识常量 */
    const RIPEMD160 = 7;

    /*! @brief SM3 信息摘要算法标识常量 */
    const SM3 = 8;

    /*! @brief SHA3_256 信息摘要算法标识常量 */
    const SHA3_256 = 9;

    /*! @brief SHA3_384 信息摘要算法标识常量 */
    const SHA3_384 = 10;

    /*! @brief SHA3_512 信息摘要算法标识常量 */
    const SHA3_512 = 11;

    /*! @brief SHAKE128 信息摘要算法标识常量 */
    const SHAKE128 = 12;

    /*! @brief SHAKE256 信息摘要算法标识常量 */
    const SHAKE256 = 13;

    /*! @brief BLAKE2S 信息摘要算法标识常量 */
    const BLAKE2S = 14;

    /*! @brief BLAKE2B 信息摘要算法标识常量 */
    const BLAKE2B = 15;

    /*! @brief 根据指定的算法标识创建一个信息摘要运算对象
     @param algo 指定摘要运算算法
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest digest(Integer algo, Buffer data = null);

    /*! @brief 创建一个 MD5 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest md5(Buffer data = null);

    /*! @brief 创建一个 SHA1 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest sha1(Buffer data = null);

    /*! @brief 创建一个 SHA224 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest sha224(Buffer data = null);

    /*! @brief 创建一个 SHA256 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest sha256(Buffer data = null);

    /*! @brief 创建一个 SHA384 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest sha384(Buffer data = null);

    /*! @brief 创建一个 SHA512 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest sha512(Buffer data = null);

    /*! @brief 创建一个 RIPEMD160 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest ripemd160(Buffer data = null);

    /*! @brief 创建一个 SM3 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest sm3(Buffer data = null);

    /*! @brief 创建一个 SHA3_256 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest sha3_256(Buffer data = null);

    /*! @brief 创建一个 SHA3_384 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest sha3_384(Buffer data = null);

    /*! @brief 创建一个 SHA3_512 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest sha3_512(Buffer data = null);

    /*! @brief 创建一个 SHAKE128 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest shake128(Buffer data = null);

    /*! @brief 创建一个 SHAKE256 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest shake256(Buffer data = null);

    /*! @brief 创建一个 BLAKE2S 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest blake2s(Buffer data = null);

    /*! @brief 创建一个 BLAKE2B 信息摘要运算对象
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest blake2b(Buffer data = null);

    /*! @brief 根据指定的算法标识创建一个信息摘要签名运算对象
     @param algo 指定摘要运算算法
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac(Integer algo, Buffer key, Buffer data = null);

    /*! @brief 创建一个 MD5 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_md5(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHA1 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_sha1(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHA224 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_sha224(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHA256 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_sha256(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHA384 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_sha384(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHA512 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_sha512(Buffer key, Buffer data = null);

    /*! @brief 创建一个 RIPEMD160 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_ripemd160(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SM3 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_sm3(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHA3_256 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_sha3_256(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHA3_384 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_sha3_384(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHAKE128 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_shake128(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHAKE256 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_shake256(Buffer key, Buffer data = null);

    /*! @brief 创建一个 SHA3_512 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_sha3_512(Buffer key, Buffer data = null);

    /*! @brief 创建一个 BLAKE2S 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_blake2s(Buffer key, Buffer data = null);

    /*! @brief 创建一个 BLAKE2B 信息摘要签名运算对象
     @param key 二进制签名密钥
     @param data 创建同时更新的二进制数据，缺省为 null，不更新数据
     @return 返回构造的信息摘要对象
     */
    static Digest hmac_blake2b(Buffer key, Buffer data = null);
};
