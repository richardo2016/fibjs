/*! @brief http basic message object*/
interface HttpMessage : Message
{
    /*! @Brief protocol version information, the allowable format is: http/#.#*/
    String protocol;

    /*! @Brief contains the container of the HTTP message header in the message, only read the attribute*/
    readonly HttpCollection headers;

    /*! @brief query and set whether to keep connecting*/
    Boolean keepAlive;

    /*! @brief query and setting whether it is an upgrade protocol*/
    Boolean upgrade;

    /*! @brief query and set the maximum request number, the default is 128*/
    Integer maxHeadersCount;

    /*! @brief query and set the maximum size of body, in mb as the unit, the default is 64*/
    Integer maxBodySize;

    /*! @brief query the source of the current object socket*/
    readonly Stream socket;

    /*! @brief check whether there is a message head for the specified key value 
      @param name Specify the key value to be checked 
      @Return Return the key value exists*/
    Boolean hasHeader(String name);

    /*! @brief query the first message header of the specified key value 
      @param name Specify the key value you want to query 
      @Return Returns the value corresponding to the key value, if it does not exist, return to UNDEFINED*/
    String firstHeader(String name);

    /*! @brief query all the message header of the specified key value 
      @param name Specify the key value you want to query, pass the empty string back to the results of the entire key value 
      @Return Returns the array corresponding to the entire value of the key value. If the data does not exist, return NULL*/
    NObject allHeader(String name = "");

    /*! @Brief adds a message header, adding data does not modify the message header of the existing key value 
      @Param Map specifies the key value data dictionary to be added*/
    addHeader(Object map);

    /*! @Brief adds a set of message header of the specified name, adding data does not modify the message header of the existing key value 
      @param name specify the key value to be added 
      @Param Values specifies a set of data to be added*/
    addHeader(String name, Array values);

    /*! @Brief adds a message header, adding data does not modify the message header of the existing key value 
      @param name specify the key value to be added 
      @Param Value specify data to be added*/
    addHeader(String name, String value);

    /*! @brief Set a message header, setting the data to modify the first value corresponding to the key value, and remove the remaining news header of the same key value 
      @Param Map specifies the key value data dictionary to be set*/
    setHeader(Object map);

    /*! @brief Set a set of message header of the specified name. Setting data will modify the value corresponding to the key value and remove the remaining message header of the same key value. 
      @param name specify the key value to be set 
      @Param Values specifies a set of data to be set*/
    setHeader(String name, Array values);

    /*! @brief Set a message header, setting the data to modify the first value corresponding to the key value, and remove the remaining news header of the same key value 
      @param name specify the key value to be set 
      @Param Value specify data to be set*/
    setHeader(String name, String value);

    /*! @brief deletes all the message header of the specified key value 
      @param name specify the key value to be deleted*/
    removeHeader(String name);
};
