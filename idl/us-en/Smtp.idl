/*! @Brief SMTP object*/
interface Smtp : object
{
    /*! @Brief SMTP object constructor*/
    Smtp();

    /*! @brief Create to the designated server 
      @Param url specifies the protocol, it can be: tcp: // host: port or ssl: // host: port*/
    connect(String url) async;

    /*! @brief Send a specified command and return the response, the server error is thrown an error 
      @Param cmd command name 
      @param arg parameter 
      If @Return is successful, return to the server response*/
    String command(String cmd, String arg) async;

    /*! @Brief Send the Helo command, the server is reported to the error 
      @Param hostname host name, the default is "LocalHost"*/
    hello(String hostname = "localhost") async;

    /*! @Brief log in to the server with a designated user and password, and the server error is thrown out of error 
      @param username user name 
      @param password password*/
    login(String username, String password) async;

    /*! @brief specifies the sender mailbox, the server reports an error 
      @param address sender mailbox*/
    from(String address) async;

    /*! @brief specifies the recipient mailbox, the server reports an error 
      @param address recipient mailbox*/
    to(String address) async;

    /*! @Brief Send a text to the recipient, the server is reported to the error 
      @param txt to send text*/
    data(String txt) async;

    /*! @brief exit and close the connection, the server reports an error*/
    quit() async;

    /*! @brief query and set timeout unit milliseconds*/
    Integer timeout;

    /*! @brief query the socket of the current connection of the SMTP object*/
    readonly Stream socket;
};
