/*! @brief fiber -range operation object, this object cannot be created directly

 After using Coroutine.start to create a fiber course, this object will be returned for fibroburation processing and communication between fibrous ducts.
 The main function of the fibrous path can be accessing this fiber course through this, or the current fiber course can be obtained through Coroutine.CURRENT.
 `` `Javascript
 Function func (v1)
 {{
   console.log (v1 + this.V);
 }

 var fb = coroutine.start (func, 100);

 fb.v = 123;

 fb.join ();
 `` `

 The local storage of the fiber course is completed by shared FIBER objects, obtaining the current fiber course through Coroutine.CURRENT, and the purpose of modifying and querying its variables to achieve the purpose of sharing data.

 `` `Javascript
 Function func ()
 {{
   console.log (coroutine.current (). v);
 }

 coroutine.current (). v = 100;

 func ();
 `` `

 When the fiber is created, the local variables of the current fiber range will be automatically copied to the new fiber course. After that, the modification of their respective local variables will not affect each other unless the variable itself is cited.

 `` `Javascript
 Function func ()
 {{
   console.log (coroutine.current (). v);
 }

 coroutine.current (). v = 100;

 var fb = coroutine.start (func);

 coroutine.current (). v = 200;

 fb.join ();
 `` `*/
interface Fiber : object
{
    /*! @brief Waiting for the end of the fiber journey*/
    join();

    /*! @brief query the unique ID of the fiber course*/
    readonly Long id;

    /*! @brief query the call of the fiber course*/
    readonly Fiber caller;

    /*! @Brief query the call stack of the fiber course*/
    readonly String stack;

    /*! @brief query the stack size of the fiber duration*/
    readonly Integer stack_usage;
};
