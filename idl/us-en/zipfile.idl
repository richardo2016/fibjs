/*! @Brief ZIP file access object*/
interface ZipFile : object
{
    /*! @brief Get the file list 
 @Return Returns the list object containing the file name*/
    NArray namelist() async;

    /*! @brief Get file information list 
 The file information contains fields: Filename, Date, Compress_type, Compress_size, File_size, Password, Data 
 @Return Returns the list object containing file information*/
    NArray infolist() async;

    /*! @brief Get file information 
 The file information contains fields: Filename, Date, Compress_type, Compress_size, File_size, Password, Data 
 @param Member specifies the file name of the information to be obtained 
 @Return Return file information object*/
    NObject getinfo(String member) async;

    /*! @Brief returns data read from compressed files 
 @Param Member specifies the file name to be read 
 @param password decompression password, there is no password by default 
 @Return Return all data from the file*/
    Buffer read(String member, String password = "") async;

    /*! @brief Declaze all files 
 @param password decompression password, there is no password by default 
 @Return contains a list of all file data and information*/
    NArray readAll(String password = "") async;

    /*! @brief Declaim specified file 
 @param Member specifies the file name to be decompressed 
 @param Path specifies the path to decompress 
 @param password decompression password, there is no password by default*/
    extract(String member, String path, String password = "") async;

    /*! @brief Declaim specified files to flow 
 @param Member specifies the file name to be decompressed 
 @param Strm specifies the stream to be decompressed 
 @param password decompression password, there is no password by default*/
    extract(String member, SeekableStream strm, String password = "") async;

    /*! @brief Declaze all files to the specified path 
 @param Path specifies the path to decompress 
 @param password decompression password, there is no password by default*/
    extractAll(String path, String password = "") async;

    /*! @brief Write to the specified file to the compressed file 
 @param Filename specifies the file to be written 
 @Param InzipName compressed in the file name of the zip file 
 @param password decompression password, there is no password by default*/
    write(String filename, String inZipName, String password = "") async;

    /*! @brief Write to the specified file to the compressed file 
 @param data specifies the file data you want to write 
 @Param InzipName compressed in the file name of the zip file 
 @param password decompression password, there is no password by default*/
    write(Buffer data, String inZipName, String password = "") async;

    /*! @brief Write to the specified file to the compressed file 
 @param Strm specifies to write file data stream 
 @Param InzipName compressed in the file name of the zip file 
 @param password decompression password, there is no password by default*/
    write(SeekableStream strm, String inZipName, String password = "") async;

    /*! @brief Turn off the open zip file*/
    close() async;
};
