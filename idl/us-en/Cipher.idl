/*! @brief Symmetrical plus compry algorithm object 

  CIPHER object belongs to the Crypto module, created: 
  `` `Javascript 
  var c = new crypto.cipher (crypto.aes, crypto.ecb, ...); 
  `` `*/
interface Cipher : object
{
    /*! @Brief Cipher constructed function, only for ARC4 initialization 
      @Param Provider specify the encryption algorithm 
      @param key specify encryption decryption code*/
    Cipher(Integer provider, Buffer key);

    /*! @brief cipher constructor 
      @Param Provider specify the encryption algorithm 
      @Param Mode specify the group password working mode 
      @param key specify encryption decryption code*/
    Cipher(Integer provider, Integer mode, Buffer key);

    /*! @brief cipher constructor 
      @Param Provider specify the encryption algorithm 
      @Param Mode specify the group password working mode 
      @param key specify encryption decryption code 
      @param IV specify the initial vector*/
    Cipher(Integer provider, Integer mode, Buffer key, Buffer iv);

    /*! @brief Return to the current algorithm name*/
    readonly String name;

    /*! @Brief Return the current algorithm password length, in the same place as the unit*/
    readonly Integer keySize;

    /*! @brief Return the initial vector length of the current algorithm, in bytes as a unit*/
    readonly Integer ivSize;

    /*! @Brief returns the length of the data block of the current algorithm, in bytes*/
    readonly Integer blockSize;

    /*! @brief uses the fill mode 
      @Param Mode specifies the fill mode, the default is padding_pkcs7*/
    paddingMode(Integer mode);

    /*! @Brief uses the current algorithm password encryption data 
      @param data specify data to be encrypted 
      @Return Return to the encrypted data*/
    Buffer encrypt(Buffer data) async;

    /*! @brief uses the current algorithm password decryption data 
      @param data specify data to be decrypted 
      @Return Return to the decrypted data*/
    Buffer decrypt(Buffer data) async;
};
