/*! @Brief SSL protocol conversion processor 

  It is used to convert data to SSL stream protocols. SSLHANDLER is an encapsulation of SSLSocket, which is used to build a server, which is logically equivalent to: 
  `` `Javascript 
  var ss = new ssl.socket (CRT, key); 

  function (s) { 
     var s1 = ss.Accept (s); 
     hdlr.invoke (s1); 
     s1.close (); 
  } 
  `` `*/
interface SslHandler : Handler
{
    /*! @Brief SSLHANDLER constructor to create a new SSLHANDLER object 

     Certs format: 
     `` `Javascript 
     
         {{ 
             name: "fibjs.org", 
             CRT: [X509cert Object], 
             Key: [pKEY Object] 
         }, 
         {{ 
             name: "*.fibjs.org", 
             CRT: [X509cert Object], 
             Key: [pKEY Object] 
         } 
     ] 
     `` ` 
     @Param Certs server certificate list 
     @Param HDLR built -in message processor, processing function, chain processing array, routing object, see mq.handler for details*/
    SslHandler(Array certs, Handler hdlr);

    /*! @Brief SSLHANDLER constructor to create a new SSLHANDLER object 
       @Param CRT X509cert certificate for client verification server 
       @Param KEY PKEY private key, used to talk to the client 
       @Param HDLR built -in message processor, processing function, chain processing array, routing object, see mq.handler for details*/
    SslHandler(X509Cert crt, PKey key, Handler hdlr);

    /*! @brief Set the certificate verification mode, the default is Verify_none*/
    Integer verification;

    /*! @Brief Client Certificate Verification Certificate Chain*/
    readonly X509Cert ca;

    /*! @brief SSL protocol conversion processor current event processing interface object*/
    Handler handler;
};
