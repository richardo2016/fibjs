/*! @brief x509 certificate request object 

  X509Req object belongs to the Crypto module, created: 
  `` `Javascript 
  var k = new crypto.x509Req (); 
  `` `*/
interface X509Req : object
{
    /*! @Brief X509Req constructor*/
    X509Req();

    /*! @Brief X509Req constructor, create a certificate request according to the given information 
      @Param Subject The theme of the certificate can be distinguished by the name 
      @Param Key Certificate Public Key 
      @Param Hash Certificate Abstract Algorithm, the default is Hash.SHA256*/
    X509Req(String subject, PKey key, Integer hash = hash.SHA256);

    /*! @brief x509Req constructor, load a deer format certificate request 
      @param derreq der format certificate request*/
    X509Req(Buffer derReq);

    /*! @brief x509Req constructor, load a PEM format certificate request 
      @Param Pemreq der format certificate request*/
    X509Req(String pemReq);

    /*! @brief Load a deer format certificate request 
      @param derreq der format certificate request*/
    import(Buffer derReq);

    /*! @brief Load a PEM format certificate request 
      @Param Pemreq Pem format certificate request*/
    import(String pemReq);

    /*! @brief Return to PEM format code requested by the current certificate 
      @Return currently requested PEM format encoding*/
    String pem();

    /*! @Brief Return to the DER format code requested by the current certificate 
      @Return currently requested DER format encoding*/
    Buffer der();

    /*! @brief Signature The current certificate request is a formal certificate 

     Opts receiving fields are as follows: 
     `` `Javascript 
     {{ 
         CA: false, // certificate is CA, default is false 
         Pathlen: -1, // Certificate depth, default to -1 
         NotBeFore: "", // Certificate effective time, default is the current time 
         Noters: "", // The failure time of the certificate, the default is notBeFore one year after one year 
         USAGE: "", // Certificate Scope, Receive: DIGITALSIGNATURE, NONREPUDIATION, KeyenCipherment, DataNCIPHERMENT, KeyAgreement, KeycertSign, CRLSIGN, CRLSIGN 
         Type: "" // Certificate NetScape certificate type, receiving: client, server, email, objsign, reserved, sslca, emailca, objca, objca 
     } 
     `` ` 
      @Param issuer signature agency 
      @Param KEY's private key 
      @param Opts other optional parameters 
      @Return Return to the signature official certificate*/
    X509Cert sign(String issuer, PKey key, Object opts = {}) async;

    /*! @brief Get the theme of the certificate to distinguish the name*/
    readonly String subject;

    /*! @brief Get the certificate of the certificate*/
    readonly PKey publicKey;

    /*! @Brief Obtaining Certificate Summary Algorithm*/
    readonly Integer sig_md;

    /*! @Brief obtained the signature algorithm of the certificate*/
    readonly Integer sig_pk;
};
