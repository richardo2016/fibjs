/*! @Brief UUID unique ID module 

  Basic module. Provide only the creation of the unique ID in operation 
  `` `Javascript 
  var uuid = request ('uuid'); 
  `` `*/
module uuid
{
    /*! @brief MD5 and SHA1 when creating uuids specifies name named domain names*/
    const DNS = 0;

    /*! @brief MD5 and SHA1 when creating uuids, specify name names URL address*/
    const URL = 1;

    /*! @brief MD5 and SHA1 when creating uuids are specified names to name ISO OID*/
    const OID = 2;

    /*! @Brief MD5 and SHA1 when creating uuids, specify name names X.500 DN*/
    const X509 = 3;

    /*! @brief Time and host name Create UUID 
      @Return Return a generated binary ID*/
    static Buffer node();

    /*! @Brief uses a specific MD5 to create UUID 
      @Param NS specifies the naming space, which can be uuid.dns, uuid.url, uuid.oid, uuid.x509 
      @param name Specify the name 
      @Return Return a generated binary ID*/
    static Buffer md5(Integer ns, String name);

    /*! @brief uses random numbers to create UUID 
      @Return Return a generated binary ID*/
    static Buffer random();

    /*! @Brief uses a specific name SHA1 to create UUID 
      @Param NS specifies the naming space, which can be uuid.dns, uuid.url, uuid.oid, uuid.x509 
      @param name Specify the name 
      @Return Return a generated binary ID*/
    static Buffer sha1(Integer ns, String name);

    /*! @Brief uses the snowflake algorithm to create UUID 
      @Return Return a generated binary ID*/
    static Buffer snowflake();

    /*! @brief query and modify the host ID of the Snowflake algorithm*/
    static Integer hostID;
};
