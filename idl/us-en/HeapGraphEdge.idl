/*! @Brief Heapgraphedge represents the association between the two HeapgraphNode nodes, from the upstream node to the downstream node*/
interface HeapGraphEdge : object
{
    /*! @Brief Links of the downstream node, possible values: 
      -Lofiler.edge_contextVariable, variables in functions 
      -Lofiler.edge_element, elements in an array 
      -Profiler.edge_property, attributes of famous objects 
      -Lofiler.edge_internal, link that cannot enter JS 
      -Lofiler.edge_hidden, pointing to nodes that need to calculate the size of space in advance 
      -Lofiler.edge_shortcut, pointing to nodes that cannot be calculated in advance 
      -PROFILER.edge_weak, a weak reference (ignored by GC)*/
    readonly Integer type;

    /*! @brief link name*/
    readonly String name;

    /*! @Brief link description*/
    readonly String description;

    /*! @Brief Get the upstream HeapgraphNode node of Heapgraphedge 
      @Return Return to source HeapgraphNode node*/
    HeapGraphNode getFromNode();

    /*! @Brief Get the downstream HeapgraphNode node of Heapgraphedge 
      @RETURN returns HeapgraphNode node*/
    HeapGraphNode getToNode();
};
