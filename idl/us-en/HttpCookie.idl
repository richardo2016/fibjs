/*! @Brief HTTP COOKIE object, used to add and process cookies*/
interface HttpCookie : object
{
    /*! @brief httpcookie construct function, create a new HTTPCOOKIE object 

      The options that OPTS can be set is as follows: 
      `` `Javascript 
      {{ 
          "name": "", // Specify the created cookie name 
          "Value": "", // Specify the created cookie value 
          "Expires": date, // Specify the created cookie expiration time 
          "domain": "", // The domain name range of the created Cookie 
          "PATH": "", // The path range of the created Cookie 
          "Secure": false, // Specify whether the created Cookie is only passed through HTTPS 
          "httponly": false, // Specify the created Cookie only allows http requests 
      } 
      `` ` 
      @param Opts specifies the foundation of Cookie created*/
    HttpCookie(Object opts = {});

    /*! @brief httpcookie construct function, create a new HTTPCOOKIE object 

      The options that OPTS can be set is as follows: 
      `` `Javascript 
      {{ 
          "Expires": date, // Specify the created cookie expiration time 
          "domain": "", // The domain name range of the created Cookie 
          "PATH": "", // The path range of the created Cookie 
          "Secure": false, // Specify whether the created Cookie is only passed through HTTPS 
          "httponly": false, // Specify the created Cookie only allows http requests 
      } 
      `` ` 
      @param name specifies the Cookie name created 
      @Param Value specifies the Cookie value created 
      @param Opts specifies other attributes of Cookie created*/
    HttpCookie(String name, String value, Object opts = {});

    /*! @Brief parsed the given string given, fill in the cookie object 
      @param header specifies the header string that needs to be parsed*/
    parse(String header);

    /*! @Brief test whether the given URL gives the current settings 
      @Param url specifies the URL of the test 
      @Return matching successfully returns true*/
    Boolean match(String url);

    /*! @brief query and set the cookies name*/
    String name;

    /*! @brief query and set the value of cookies*/
    String value;

    /*! @brief query and set the domain name range of cookies*/
    String domain;

    /*! @brief query and set the path range of cookies*/
    String path;

    /*! @brief query and set the expiration time of cookies*/
    Date expires;

    /*! @brief query and set the cookies only allowed HTTP requests, default FALSE*/
    Boolean httpOnly;

    /*! @brief query and set whether cookies are only passed through HTTPS, default FALSE*/
    Boolean secure;
};
