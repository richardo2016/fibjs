/*! @brief cache read object 

  The bufferedReader object is used to cache the data of binary streaming objects, and provides text reading capabilities, only supports UTF-8 format conversion. Create method: 
  `` `Javascript 
  var Reader = New IO.BUFFEREDSTREAM (stream); 
  `` `*/
interface BufferedStream : Stream
{
    /*! @brief buffredstream constructor 
       @Param Stm buffferedstream binary foundation flow object*/
    BufferedStream(Stream stm);

    /*! @brief read the text of the specified character 
      @param size specifies the number of text characters read read, based on UTF8 or specified coded bytes 
      @Return Return to the text string read, if there is no data to read, or connect interruption, return Null*/
    String readText(Integer size) async;

    /*! @Brief read a line of text, which is identified as settings based on EOL attributes, default, POSIX: \ "\ \ n \"; Windows: \ "\ \ r \\ n \" "" "" "" "" "" "" 
      @Param Maxlen specifies the largest string read this time, which is based on UTF8 coding bytes, and the number of unlimited number of characters is not limited 
      @Return Return to the text string read, if there is no data to read, or connect interruption, return Null*/
    String readLine(Integer maxlen = -1) async;

    /*! @Brief reads a set of text lines in an array, and the ending logo is based on the EOL attribute settings. When the default, POSIX: \ \ \ n \ "; Windows: \ \ r \\ n \" "" 
      @Param MaxLines specifies the maximum number of rows read this time, defaults to all text lines 
      @Return returns the text line array read, if no data can be read, or interrupted, empty array*/
    Array readLines(Integer maxlines = -1);

    /*! @Brief read a text string, ending the specified bytes as the end 
      @param mk specify the string of the ending 
      @Param Maxlen specifies the largest string read this time, which is based on UTF8 coding bytes, and the number of unlimited number of characters is not limited 
      @Return Return to the text string read, if there is no data to read, or connect interruption, return Null*/
    String readUntil(String mk, Integer maxlen = -1) async;

    /*! @brief Write a string 
      @param txt specified the written string*/
    writeText(String txt) async;

    /*! @brief Write a string and write it into the change line 
      @param txt specified the written string*/
    writeLine(String txt) async;

    /*! @brief query the flow object when creating a cache object*/
    readonly Stream stream;

    /*! @brief query and set the character set when processing the current object processing text, the default is UTF-8*/
    String charset;

    /*! @brief query and setting line signs, when the default, posix: \ "\ \ n \"; Windows: \ \ \ r \\ n \ "*/
    String EOL;
};
