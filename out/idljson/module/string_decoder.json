{
  "declare": {
    "comments": "! @brief 解码 Buffer 到字符串\n\n 使用方法：\n ```JavaScript\n  const { StringDecoder } = require('string_decoder');\n  const decoder = new StringDecoder('utf8');\n\n  const cent = Buffer.from([0xC2, 0xA2]);\n  console.log(decoder.write(cent));\n\n  const euro = Buffer.from([0xE2, 0x82, 0xAC]);\n  console.log(decoder.write(euro));\n ```\n ",
    "type": "module",
    "name": "string_decoder",
    "extend": "object",
    "module": true,
    "doc": {
      "descript": "解码 Buffer 到字符串",
      "detail": [
        "使用方法：",
        "```JavaScript",
        " const { StringDecoder } = require('string_decoder');",
        " const decoder = new StringDecoder('utf8');",
        "",
        " const cent = Buffer.from([0xC2, 0xA2]);",
        " console.log(decoder.write(cent));",
        "",
        " const euro = Buffer.from([0xE2, 0x82, 0xAC]);",
        " console.log(decoder.write(euro));",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "object",
      "comments": "! @brief 创建一个解码对象，参见 StringDecoder ",
      "deprecated": null,
      "name": "StringDecoder",
      "type": "StringDecoder",
      "newable": true,
      "doc": {
        "descript": "创建一个解码对象，参见 StringDecoder",
        "detail": [],
        "params": []
      }
    }
  ],
  "collect": "Encoding"
}