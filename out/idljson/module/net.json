{
  "declare": {
    "comments": "! @brief 网络访问模块\n\n 基础模块。可用于创建和操作网络资源，引用方式：\n ```JavaScript\n var net = require('net');\n ```\n ",
    "type": "module",
    "name": "net",
    "extend": "object",
    "module": true,
    "doc": {
      "descript": "网络访问模块",
      "detail": [
        "基础模块。可用于创建和操作网络资源，引用方式：",
        "```JavaScript",
        "var net = require('net');",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "const",
      "comments": "! @brief 地址集常量，指定 unix socket ",
      "deprecated": null,
      "const": "const",
      "name": "AF_UNIX",
      "default": {
        "value": "1"
      },
      "doc": {
        "descript": "地址集常量，指定 unix socket",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 地址集常量，指定 Windows pipe ",
      "deprecated": null,
      "const": "const",
      "name": "AF_PIPE",
      "default": {
        "value": "1"
      },
      "doc": {
        "descript": "地址集常量，指定 Windows pipe",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 地址集常量，指定 ipv4",
      "deprecated": null,
      "const": "const",
      "name": "AF_INET",
      "default": {
        "value": "2"
      },
      "doc": {
        "descript": "地址集常量，指定 ipv4",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 地址集常量，指定 ipv6",
      "deprecated": null,
      "const": "const",
      "name": "AF_INET6",
      "default": {
        "value": "10"
      },
      "doc": {
        "descript": "地址集常量，指定 ipv6",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和设置 socket 后端是否使用 uv，缺省为 false ",
      "deprecated": null,
      "static": "static",
      "readonly": null,
      "name": "use_uv_socket",
      "type": "Boolean",
      "doc": {
        "descript": "查询和设置 socket 后端是否使用 uv，缺省为 false",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 查询当前运行环境网络信息\n     @return 返回网卡信息\n    ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "info",
      "type": "Object",
      "params": null,
      "doc": {
        "descript": "查询当前运行环境网络信息",
        "detail": [],
        "params": [],
        "return": {
          "descript": "返回网卡信息",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 查询给定的主机名的地址\n     @param name 指定主机名\n     @param family 指定查询返回类型，缺省为 AF_INET\n     @return 返回查询的 ip 字符串\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "resolve",
      "type": "String",
      "params": [
        {
          "type": "String",
          "name": "name",
          "default": null
        },
        {
          "type": "Integer",
          "name": "family",
          "default": {
            "const": "AF_INET"
          }
        }
      ],
      "doc": {
        "descript": "查询给定的主机名的地址",
        "detail": [],
        "params": [
          {
            "name": "name",
            "descript": "指定主机名",
            "detail": []
          },
          {
            "name": "family",
            "descript": "指定查询返回类型，缺省为 AF_INET",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回查询的 ip 字符串",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 快速查询的主机地址，等效与 resolve(name)\n     @param name 指定主机名\n     @return 返回查询的 ip 字符串\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "ip",
      "type": "String",
      "params": [
        {
          "type": "String",
          "name": "name",
          "default": null
        }
      ],
      "doc": {
        "descript": "快速查询的主机地址，等效与 resolve(name)",
        "detail": [],
        "params": [
          {
            "name": "name",
            "descript": "指定主机名",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回查询的 ip 字符串",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 快速查询的主机 ipv6 地址，等效与 resolve(name, net.AF_INET6)\n     @param name 指定主机名\n     @return 返回查询的 ipv6 字符串\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "ipv6",
      "type": "String",
      "params": [
        {
          "type": "String",
          "name": "name",
          "default": null
        }
      ],
      "doc": {
        "descript": "快速查询的主机 ipv6 地址，等效与 resolve(name, net.AF_INET6)",
        "detail": [],
        "params": [
          {
            "name": "name",
            "descript": "指定主机名",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回查询的 ipv6 字符串",
          "detail": []
        }
      }
    },
    {
      "memType": "object",
      "comments": "! @brief 创建一个 Socket 对象，参见 Socket ",
      "deprecated": null,
      "name": "Socket",
      "type": "Socket",
      "doc": {
        "descript": "创建一个 Socket 对象，参见 Socket",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 创建一个 Socket 或 SslSocket 对象并建立连接\n     @param url 指定连接的协议，可以是：tcp://host:port 或者 ssl://host:port，也可以是：unix:/usr/local/proc1 或者 pipe://./pipe/proc1，连接 pipe 时需要用 `/` 替换 `\\`\n     @param timeout 指定超时时间，单位是毫秒，默认为0\n     @return 返回连接成功的 Socket 或者 SslSocket 对象\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "connect",
      "type": "Stream",
      "params": [
        {
          "type": "String",
          "name": "url",
          "default": null
        },
        {
          "type": "Integer",
          "name": "timeout",
          "default": {
            "value": "0"
          }
        }
      ],
      "doc": {
        "descript": "创建一个 Socket 或 SslSocket 对象并建立连接",
        "detail": [],
        "params": [
          {
            "name": "url",
            "descript": "指定连接的协议，可以是：tcp://host:port 或者 ssl://host:port，也可以是：unix:/usr/local/proc1 或者 pipe://./pipe/proc1，连接 pipe 时需要用 `/` 替换 `\\`",
            "detail": []
          },
          {
            "name": "timeout",
            "descript": "指定超时时间，单位是毫秒，默认为0",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回连接成功的 Socket 或者 SslSocket 对象",
          "detail": []
        }
      }
    },
    {
      "memType": "object",
      "comments": "! @brief 创建一个 Smtp 对象，参见 Smtp ",
      "deprecated": null,
      "name": "Smtp",
      "type": "Smtp",
      "doc": {
        "descript": "创建一个 Smtp 对象，参见 Smtp",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 创建一个 Smtp 对象并建立连接，参见 Smtp\n     @param url 指定连接的协议，可以是：tcp://host:port 或者 ssl://host:port\n     @param timeout 指定超时时间，单位是毫秒，默认为0\n     @return 返回连接成功的 Smtp 对象\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "openSmtp",
      "type": "Smtp",
      "params": [
        {
          "type": "String",
          "name": "url",
          "default": null
        },
        {
          "type": "Integer",
          "name": "timeout",
          "default": {
            "value": "0"
          }
        }
      ],
      "doc": {
        "descript": "创建一个 Smtp 对象并建立连接，参见 Smtp",
        "detail": [],
        "params": [
          {
            "name": "url",
            "descript": "指定连接的协议，可以是：tcp://host:port 或者 ssl://host:port",
            "detail": []
          },
          {
            "name": "timeout",
            "descript": "指定超时时间，单位是毫秒，默认为0",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回连接成功的 Smtp 对象",
          "detail": []
        }
      }
    },
    {
      "memType": "object",
      "comments": "! @brief 创建一个 TcpServer 对象，参见 TcpServer ",
      "deprecated": null,
      "name": "TcpServer",
      "type": "TcpServer",
      "doc": {
        "descript": "创建一个 TcpServer 对象，参见 TcpServer",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "object",
      "comments": "! @brief 创建一个 UrlObject 对象，参见 UrlObject ",
      "deprecated": null,
      "name": "Url",
      "type": "UrlObject",
      "newable": true,
      "doc": {
        "descript": "创建一个 UrlObject 对象，参见 UrlObject",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 查询当前系统异步网络引擎\n     @return 返回网络引擎名称\n    ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "backend",
      "type": "String",
      "params": null,
      "doc": {
        "descript": "查询当前系统异步网络引擎",
        "detail": [],
        "params": [],
        "return": {
          "descript": "返回网络引擎名称",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 检测输入是否是 IP 地址\n     @param ip 指定要检测的字符串\n     @return 非合法的 IP 地址，返回 0, 如果是 IPv4 则返回 4，如果是 IPv6 则返回 6\n    ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "isIP",
      "type": "Integer",
      "params": [
        {
          "type": "String",
          "name": "ip",
          "default": {
            "value": "\"\""
          }
        }
      ],
      "doc": {
        "descript": "检测输入是否是 IP 地址",
        "detail": [],
        "params": [
          {
            "name": "ip",
            "descript": "指定要检测的字符串",
            "detail": []
          }
        ],
        "return": {
          "descript": "非合法的 IP 地址，返回 0, 如果是 IPv4 则返回 4，如果是 IPv6 则返回 6",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 检测输入是否是 IPv4 地址\n     @param ip 指定要检测的字符串\n     @return 如果是 IPv4 则返回 true.否则返回 false\n    ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "isIPv4",
      "type": "Boolean",
      "params": [
        {
          "type": "String",
          "name": "ip",
          "default": {
            "value": "\"\""
          }
        }
      ],
      "doc": {
        "descript": "检测输入是否是 IPv4 地址",
        "detail": [],
        "params": [
          {
            "name": "ip",
            "descript": "指定要检测的字符串",
            "detail": []
          }
        ],
        "return": {
          "descript": "如果是 IPv4 则返回 true.否则返回 false",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 检测输入是否是 IPv6 地址\n     @param ip 指定要检测的字符串\n     @return 如果是 IPv6 则返回 true.否则返回 false\n    ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "isIPv6",
      "type": "Boolean",
      "params": [
        {
          "type": "String",
          "name": "ip",
          "default": {
            "value": "\"\""
          }
        }
      ],
      "doc": {
        "descript": "检测输入是否是 IPv6 地址",
        "detail": [],
        "params": [
          {
            "name": "ip",
            "descript": "指定要检测的字符串",
            "detail": []
          }
        ],
        "return": {
          "descript": "如果是 IPv6 则返回 true.否则返回 false",
          "detail": []
        }
      }
    }
  ],
  "collect": "Network"
}