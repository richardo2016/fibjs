{
  "declare": {
    "comments": "! @brief zlib 压缩解压模块\n\n 使用方法：\n ```JavaScript\n var zlib = require('zlib');\n ```\n ",
    "type": "module",
    "name": "zlib",
    "extend": "object",
    "module": true,
    "doc": {
      "descript": "zlib 压缩解压模块",
      "detail": [
        "使用方法：",
        "```JavaScript",
        "var zlib = require('zlib');",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "const",
      "comments": "! @brief deflate 压缩级别，设定不压缩 ",
      "deprecated": null,
      "const": "const",
      "name": "NO_COMPRESSION",
      "default": {
        "value": "0"
      },
      "doc": {
        "descript": "deflate 压缩级别，设定不压缩",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief deflate 压缩级别，设定最快压缩 ",
      "deprecated": null,
      "const": "const",
      "name": "BEST_SPEED",
      "default": {
        "value": "1"
      },
      "doc": {
        "descript": "deflate 压缩级别，设定最快压缩",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief deflate 压缩级别，设定最高压缩 ",
      "deprecated": null,
      "const": "const",
      "name": "BEST_COMPRESSION",
      "default": {
        "value": "9"
      },
      "doc": {
        "descript": "deflate 压缩级别，设定最高压缩",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief deflate 压缩级别，设定缺省设置 ",
      "deprecated": null,
      "const": "const",
      "name": "DEFAULT_COMPRESSION",
      "default": {
        "value": "-1"
      },
      "doc": {
        "descript": "deflate 压缩级别，设定缺省设置",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 创建一个 deflate 流对象 \n     @param to 用于存储处理结果的流\n     @return 返回封装过的流对象",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "createDeflate",
      "type": "Stream",
      "params": [
        {
          "type": "Stream",
          "name": "to",
          "default": null
        }
      ],
      "doc": {
        "descript": "创建一个 deflate 流对象",
        "detail": [],
        "params": [
          {
            "name": "to",
            "descript": "用于存储处理结果的流",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回封装过的流对象",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 创建一个 deflateRaw 流对象 \n     @param to 用于存储处理结果的流\n     @return 返回封装过的流对象",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "createDeflateRaw",
      "type": "Stream",
      "params": [
        {
          "type": "Stream",
          "name": "to",
          "default": null
        }
      ],
      "doc": {
        "descript": "创建一个 deflateRaw 流对象",
        "detail": [],
        "params": [
          {
            "name": "to",
            "descript": "用于存储处理结果的流",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回封装过的流对象",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 创建一个 gunzip 流对象 \n     @param to 用于存储处理结果的流\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     @return 返回封装过的流对象",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "createGunzip",
      "type": "Stream",
      "params": [
        {
          "type": "Stream",
          "name": "to",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "创建一个 gunzip 流对象",
        "detail": [],
        "params": [
          {
            "name": "to",
            "descript": "用于存储处理结果的流",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回封装过的流对象",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 创建一个 gzip 流对象 \n     @param to 用于存储处理结果的流\n     @return 返回封装过的流对象",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "createGzip",
      "type": "Stream",
      "params": [
        {
          "type": "Stream",
          "name": "to",
          "default": null
        }
      ],
      "doc": {
        "descript": "创建一个 gzip 流对象",
        "detail": [],
        "params": [
          {
            "name": "to",
            "descript": "用于存储处理结果的流",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回封装过的流对象",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 创建一个 inflate 流对象 \n     @param to 用于存储处理结果的流\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     @return 返回封装过的流对象",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "createInflate",
      "type": "Stream",
      "params": [
        {
          "type": "Stream",
          "name": "to",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "创建一个 inflate 流对象",
        "detail": [],
        "params": [
          {
            "name": "to",
            "descript": "用于存储处理结果的流",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回封装过的流对象",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 创建一个 inflateRaw 流对象 \n     @param to 用于存储处理结果的流\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     @return 返回封装过的流对象",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "createInflateRaw",
      "type": "Stream",
      "params": [
        {
          "type": "Stream",
          "name": "to",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "创建一个 inflateRaw 流对象",
        "detail": [],
        "params": [
          {
            "name": "to",
            "descript": "用于存储处理结果的流",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回封装过的流对象",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用 deflate 算法压缩数据(zlib格式)\n     @param data 给定要压缩的数据\n     @param level 指定压缩级别，缺省为 DEFAULT_COMPRESSION\n     @return 返回压缩后的二进制数据\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "deflate",
      "type": "Buffer",
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Integer",
          "name": "level",
          "default": {
            "const": "DEFAULT_COMPRESSION"
          }
        }
      ],
      "doc": {
        "descript": "使用 deflate 算法压缩数据(zlib格式)",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定要压缩的数据",
            "detail": []
          },
          {
            "name": "level",
            "descript": "指定压缩级别，缺省为 DEFAULT_COMPRESSION",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回压缩后的二进制数据",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用 deflate 算法压缩数据到流对象中(zlib格式)\n     @param data 给定要压缩的数据\n     @param stm 指定存储压缩数据的流\n     @param level 指定压缩级别，缺省为 DEFAULT_COMPRESSION\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "deflateTo",
      "type": null,
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "level",
          "default": {
            "const": "DEFAULT_COMPRESSION"
          }
        }
      ],
      "doc": {
        "descript": "使用 deflate 算法压缩数据到流对象中(zlib格式)",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定要压缩的数据",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储压缩数据的流",
            "detail": []
          },
          {
            "name": "level",
            "descript": "指定压缩级别，缺省为 DEFAULT_COMPRESSION",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用 deflate 算法压缩源流中的数据到流对象中(zlib格式)\n     @param src 给定要压缩的数据所在的流\n     @param stm 指定存储压缩数据的流\n     @param level 指定压缩级别，缺省为 DEFAULT_COMPRESSION\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "deflateTo",
      "type": null,
      "params": [
        {
          "type": "Stream",
          "name": "src",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "level",
          "default": {
            "const": "DEFAULT_COMPRESSION"
          }
        }
      ],
      "doc": {
        "descript": "使用 deflate 算法压缩源流中的数据到流对象中(zlib格式)",
        "detail": [],
        "params": [
          {
            "name": "src",
            "descript": "给定要压缩的数据所在的流",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储压缩数据的流",
            "detail": []
          },
          {
            "name": "level",
            "descript": "指定压缩级别，缺省为 DEFAULT_COMPRESSION",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 解压缩 deflate 算法压缩的数据(zlib格式)\n     @param data 给定压缩后的数据\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     @return 返回解压缩后的二进制数据\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "inflate",
      "type": "Buffer",
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "解压缩 deflate 算法压缩的数据(zlib格式)",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定压缩后的数据",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回解压缩后的二进制数据",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 解压缩 deflate 算法压缩的数据到流对象中(zlib格式)\n     @param data 给定要解压缩的数据\n     @param stm 指定存储解压缩数据的流\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "inflateTo",
      "type": null,
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "解压缩 deflate 算法压缩的数据到流对象中(zlib格式)",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定要解压缩的数据",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储解压缩数据的流",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 解压缩源流中 deflate 算法压缩的数据到流对象中(zlib格式)\n     @param src 给定要解压缩的数据所在的流\n     @param stm 指定存储解压缩数据的流\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "inflateTo",
      "type": null,
      "params": [
        {
          "type": "Stream",
          "name": "src",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "解压缩源流中 deflate 算法压缩的数据到流对象中(zlib格式)",
        "detail": [],
        "params": [
          {
            "name": "src",
            "descript": "给定要解压缩的数据所在的流",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储解压缩数据的流",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用 gzip 算法压缩数据\n     @param data 给定要压缩的数据\n     @return 返回压缩后的二进制数据\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "gzip",
      "type": "Buffer",
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        }
      ],
      "doc": {
        "descript": "使用 gzip 算法压缩数据",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定要压缩的数据",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回压缩后的二进制数据",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用 gzip 算法压缩数据到流对象中\n     @param data 给定要压缩的数据\n     @param stm 指定存储压缩数据的流\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "gzipTo",
      "type": null,
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        }
      ],
      "doc": {
        "descript": "使用 gzip 算法压缩数据到流对象中",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定要压缩的数据",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储压缩数据的流",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用 gzip 算法压缩源流中的数据到流对象中\n     @param src 给定要压缩的数据所在的流\n     @param stm 指定存储压缩数据的流\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "gzipTo",
      "type": null,
      "params": [
        {
          "type": "Stream",
          "name": "src",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        }
      ],
      "doc": {
        "descript": "使用 gzip 算法压缩源流中的数据到流对象中",
        "detail": [],
        "params": [
          {
            "name": "src",
            "descript": "给定要压缩的数据所在的流",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储压缩数据的流",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 解压缩 gzip 算法压缩的数据\n     @param data 给定压缩后的数据\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     @return 返回解压缩后的二进制数据\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "gunzip",
      "type": "Buffer",
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "解压缩 gzip 算法压缩的数据",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定压缩后的数据",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回解压缩后的二进制数据",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 解压缩 gzip 算法压缩的数据到流对象中\n     @param data 给定要解压缩的数据\n     @param stm 指定存储解压缩数据的流\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "gunzipTo",
      "type": null,
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "解压缩 gzip 算法压缩的数据到流对象中",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定要解压缩的数据",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储解压缩数据的流",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 解压缩源流中 gzip 算法压缩的数据到流对象中\n     @param src 给定要解压缩的数据所在的流\n     @param stm 指定存储解压缩数据的流\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "gunzipTo",
      "type": null,
      "params": [
        {
          "type": "Stream",
          "name": "src",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "解压缩源流中 gzip 算法压缩的数据到流对象中",
        "detail": [],
        "params": [
          {
            "name": "src",
            "descript": "给定要解压缩的数据所在的流",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储解压缩数据的流",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用 deflate 算法压缩数据(deflateRaw)\n     @param data 给定要压缩的数据\n     @param level 指定压缩级别，缺省为 DEFAULT_COMPRESSION\n     @return 返回压缩后的二进制数据\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "deflateRaw",
      "type": "Buffer",
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Integer",
          "name": "level",
          "default": {
            "const": "DEFAULT_COMPRESSION"
          }
        }
      ],
      "doc": {
        "descript": "使用 deflate 算法压缩数据(deflateRaw)",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定要压缩的数据",
            "detail": []
          },
          {
            "name": "level",
            "descript": "指定压缩级别，缺省为 DEFAULT_COMPRESSION",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回压缩后的二进制数据",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用 deflate 算法压缩数据到流对象中(deflateRaw)\n     @param data 给定要压缩的数据\n     @param stm 指定存储压缩数据的流\n     @param level 指定压缩级别，缺省为 DEFAULT_COMPRESSION\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "deflateRawTo",
      "type": null,
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "level",
          "default": {
            "const": "DEFAULT_COMPRESSION"
          }
        }
      ],
      "doc": {
        "descript": "使用 deflate 算法压缩数据到流对象中(deflateRaw)",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定要压缩的数据",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储压缩数据的流",
            "detail": []
          },
          {
            "name": "level",
            "descript": "指定压缩级别，缺省为 DEFAULT_COMPRESSION",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用 deflate 算法压缩源流中的数据到流对象中(deflateRaw)\n     @param src 给定要压缩的数据所在的流\n     @param stm 指定存储压缩数据的流\n     @param level 指定压缩级别，缺省为 DEFAULT_COMPRESSION\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "deflateRawTo",
      "type": null,
      "params": [
        {
          "type": "Stream",
          "name": "src",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "level",
          "default": {
            "const": "DEFAULT_COMPRESSION"
          }
        }
      ],
      "doc": {
        "descript": "使用 deflate 算法压缩源流中的数据到流对象中(deflateRaw)",
        "detail": [],
        "params": [
          {
            "name": "src",
            "descript": "给定要压缩的数据所在的流",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储压缩数据的流",
            "detail": []
          },
          {
            "name": "level",
            "descript": "指定压缩级别，缺省为 DEFAULT_COMPRESSION",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 解压缩 deflate 算法压缩的数据(inflateRaw)\n     @param data 给定压缩后的数据\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     @return 返回解压缩后的二进制数据\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "inflateRaw",
      "type": "Buffer",
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "解压缩 deflate 算法压缩的数据(inflateRaw)",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定压缩后的数据",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回解压缩后的二进制数据",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 解压缩 deflate 算法压缩的数据到流对象中(inflateRaw)\n     @param data 给定要解压缩的数据\n     @param stm 指定存储解压缩数据的流\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "inflateRawTo",
      "type": null,
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "解压缩 deflate 算法压缩的数据到流对象中(inflateRaw)",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "给定要解压缩的数据",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储解压缩数据的流",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 解压缩源流中 deflate 算法压缩的数据到流对象中(inflateRaw)\n     @param src 给定要解压缩的数据所在的流\n     @param stm 指定存储解压缩数据的流\n     @param maxSize 指定解压缩尺寸限制，缺省为 -1，不限制\n     ",
      "deprecated": null,
      "static": "static",
      "async": "async",
      "name": "inflateRawTo",
      "type": null,
      "params": [
        {
          "type": "Stream",
          "name": "src",
          "default": null
        },
        {
          "type": "Stream",
          "name": "stm",
          "default": null
        },
        {
          "type": "Integer",
          "name": "maxSize",
          "default": {
            "value": "-1"
          }
        }
      ],
      "doc": {
        "descript": "解压缩源流中 deflate 算法压缩的数据到流对象中(inflateRaw)",
        "detail": [],
        "params": [
          {
            "name": "src",
            "descript": "给定要解压缩的数据所在的流",
            "detail": []
          },
          {
            "name": "stm",
            "descript": "指定存储解压缩数据的流",
            "detail": []
          },
          {
            "name": "maxSize",
            "descript": "指定解压缩尺寸限制，缺省为 -1，不限制",
            "detail": []
          }
        ]
      }
    }
  ],
  "collect": "Compress"
}