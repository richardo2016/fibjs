{
  "declare": {
    "comments": "! @brief 安全沙箱模块，用于隔离不同安全等级的运行环境\n\n 通过建立安全沙箱，可以限制脚本运行时可以接触的资源，隔离不同脚本执行环境，并可以为不同的环境定制基础模块，以保障整体运行环境的安全。\n\n 下面的示例创建一个沙箱，限制只允许访问全局基础模块中的 assert 模块，并添加 a 和 b 两个定制模块：\n ```JavaScript\n var vm = require('vm');\n var sbox = new vm.SandBox({\n   a: 100,\n   b: 200,\n   assert: require('assert')\n });\n\n var mod_in_sbox = sbox.require('./path/to/mod');\n ```\n ",
    "type": "module",
    "name": "vm",
    "extend": "object",
    "module": true,
    "doc": {
      "descript": "安全沙箱模块，用于隔离不同安全等级的运行环境",
      "detail": [
        "通过建立安全沙箱，可以限制脚本运行时可以接触的资源，隔离不同脚本执行环境，并可以为不同的环境定制基础模块，以保障整体运行环境的安全。",
        "",
        "下面的示例创建一个沙箱，限制只允许访问全局基础模块中的 assert 模块，并添加 a 和 b 两个定制模块：",
        "```JavaScript",
        "var vm = require('vm');",
        "var sbox = new vm.SandBox({",
        "  a: 100,",
        "  b: 200,",
        "  assert: require('assert')",
        "});",
        "",
        "var mod_in_sbox = sbox.require('./path/to/mod');",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "object",
      "comments": "! @brief 创建一个 SandBox 对象，参见 SandBox ",
      "deprecated": null,
      "name": "SandBox",
      "type": "SandBox",
      "newable": true,
      "doc": {
        "descript": "创建一个 SandBox 对象，参见 SandBox",
        "detail": [],
        "params": []
      }
    }
  ],
  "collect": "Utility"
}