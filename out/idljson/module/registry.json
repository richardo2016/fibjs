{
  "declare": {
    "comments": "! @brief Windows 注册表访问模块\n 引用方式：\n ```JavaScript\n var registry = require('registry');\n var value = registry.get(registry.CLASSES_ROOT, \"\\node1\\node2\\value\");\n ```\n ",
    "type": "module",
    "name": "registry",
    "extend": "object",
    "module": true,
    "doc": {
      "descript": "Windows 注册表访问模块",
      "detail": [
        "引用方式：",
        "```JavaScript",
        "var registry = require('registry');",
        "var value = registry.get(registry.CLASSES_ROOT, \"\\node1\\node2\\value\");",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "const",
      "comments": "! @brief 注册表根，存储Windows可识别的文件类型的详细列表，以及相关联的程序 ",
      "deprecated": null,
      "const": "const",
      "name": "CLASSES_ROOT",
      "default": {
        "value": "0"
      },
      "doc": {
        "descript": "注册表根，存储Windows可识别的文件类型的详细列表，以及相关联的程序",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 注册表根，存储当前用户设置的信息 ",
      "deprecated": null,
      "const": "const",
      "name": "CURRENT_USER",
      "default": {
        "value": "1"
      },
      "doc": {
        "descript": "注册表根，存储当前用户设置的信息",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 注册表根，包括安装在计算机上的硬件和软件的信息 ",
      "deprecated": null,
      "const": "const",
      "name": "LOCAL_MACHINE",
      "default": {
        "value": "2"
      },
      "doc": {
        "descript": "注册表根，包括安装在计算机上的硬件和软件的信息",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 注册表根，包含使用计算机的用户的信息 ",
      "deprecated": null,
      "const": "const",
      "name": "USERS",
      "default": {
        "value": "3"
      },
      "doc": {
        "descript": "注册表根，包含使用计算机的用户的信息",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 注册表根，这个分支包含计算机当前的硬件配置信息 ",
      "deprecated": null,
      "const": "const",
      "name": "CURRENT_CONFIG",
      "default": {
        "value": "5"
      },
      "doc": {
        "descript": "注册表根，这个分支包含计算机当前的硬件配置信息",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 注册表数据类型，字符串 ",
      "deprecated": null,
      "const": "const",
      "name": "SZ",
      "default": {
        "value": "1"
      },
      "doc": {
        "descript": "注册表数据类型，字符串",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 注册表数据类型，扩展字符串 ",
      "deprecated": null,
      "const": "const",
      "name": "EXPAND_SZ",
      "default": {
        "value": "2"
      },
      "doc": {
        "descript": "注册表数据类型，扩展字符串",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 注册表数据类型，32 位数值 ",
      "deprecated": null,
      "const": "const",
      "name": "DWORD",
      "default": {
        "value": "4"
      },
      "doc": {
        "descript": "注册表数据类型，32 位数值",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "const",
      "comments": "! @brief 注册表数据类型，64 位数值 ",
      "deprecated": null,
      "const": "const",
      "name": "QWORD",
      "default": {
        "value": "11"
      },
      "doc": {
        "descript": "注册表数据类型，64 位数值",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 返回指定键值下的所有子健\n     @param root 指定注册表根\n     @param key 指定键值\n     @return 返回该键值下所有子健\n     ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "listSubKey",
      "type": "NArray",
      "params": [
        {
          "type": "Integer",
          "name": "root",
          "default": null
        },
        {
          "type": "String",
          "name": "key",
          "default": null
        }
      ],
      "doc": {
        "descript": "返回指定键值下的所有子健",
        "detail": [],
        "params": [
          {
            "name": "root",
            "descript": "指定注册表根",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定键值",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回该键值下所有子健",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 返回指定键值下的所有数据的健\n     @param root 指定注册表根\n     @param key 指定键值\n     @return 返回该键值下所有数据的健\n     ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "listValue",
      "type": "NArray",
      "params": [
        {
          "type": "Integer",
          "name": "root",
          "default": null
        },
        {
          "type": "String",
          "name": "key",
          "default": null
        }
      ],
      "doc": {
        "descript": "返回指定键值下的所有数据的健",
        "detail": [],
        "params": [
          {
            "name": "root",
            "descript": "指定注册表根",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定键值",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回该键值下所有数据的健",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 查询指定键值的数值\n     @param root 指定注册表根\n     @param key 指定键值\n     @return 返回指定键值的数值\n     ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "get",
      "type": "Value",
      "params": [
        {
          "type": "Integer",
          "name": "root",
          "default": null
        },
        {
          "type": "String",
          "name": "key",
          "default": null
        }
      ],
      "doc": {
        "descript": "查询指定键值的数值",
        "detail": [],
        "params": [
          {
            "name": "root",
            "descript": "指定注册表根",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定键值",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回指定键值的数值",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 设置指定键值为数字\n     @param root 指定注册表根\n     @param key 指定键值\n     @param value 指定数字\n     @param type 指定类型，允许的类型为 DWORD 和 QWORD，缺省为 DWORD\n     ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "set",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "root",
          "default": null
        },
        {
          "type": "String",
          "name": "key",
          "default": null
        },
        {
          "type": "Number",
          "name": "value",
          "default": null
        },
        {
          "type": "Integer",
          "name": "type",
          "default": {
            "const": "DWORD"
          }
        }
      ],
      "doc": {
        "descript": "设置指定键值为数字",
        "detail": [],
        "params": [
          {
            "name": "root",
            "descript": "指定注册表根",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定键值",
            "detail": []
          },
          {
            "name": "value",
            "descript": "指定数字",
            "detail": []
          },
          {
            "name": "type",
            "descript": "指定类型，允许的类型为 DWORD 和 QWORD，缺省为 DWORD",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 设置指定键值为字符串\n     @param root 指定注册表根\n     @param key 指定键值\n     @param value 指定字符串\n     @param type 指定类型，允许的类型为 SZ 和 EXPAND_SZ，缺省为 SZ\n     ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "set",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "root",
          "default": null
        },
        {
          "type": "String",
          "name": "key",
          "default": null
        },
        {
          "type": "String",
          "name": "value",
          "default": null
        },
        {
          "type": "Integer",
          "name": "type",
          "default": {
            "const": "SZ"
          }
        }
      ],
      "doc": {
        "descript": "设置指定键值为字符串",
        "detail": [],
        "params": [
          {
            "name": "root",
            "descript": "指定注册表根",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定键值",
            "detail": []
          },
          {
            "name": "value",
            "descript": "指定字符串",
            "detail": []
          },
          {
            "name": "type",
            "descript": "指定类型，允许的类型为 SZ 和 EXPAND_SZ，缺省为 SZ",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 设置指定键值为多字符串\n     @param root 指定注册表根\n     @param key 指定键值\n     @param value 指定多字符串数组\n     ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "set",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "root",
          "default": null
        },
        {
          "type": "String",
          "name": "key",
          "default": null
        },
        {
          "type": "Array",
          "name": "value",
          "default": null
        }
      ],
      "doc": {
        "descript": "设置指定键值为多字符串",
        "detail": [],
        "params": [
          {
            "name": "root",
            "descript": "指定注册表根",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定键值",
            "detail": []
          },
          {
            "name": "value",
            "descript": "指定多字符串数组",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 设置指定键值为二进制\n     @param root 指定注册表根\n     @param key 指定键值\n     @param value 指定二进制数据\n     ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "set",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "root",
          "default": null
        },
        {
          "type": "String",
          "name": "key",
          "default": null
        },
        {
          "type": "Buffer",
          "name": "value",
          "default": null
        }
      ],
      "doc": {
        "descript": "设置指定键值为二进制",
        "detail": [],
        "params": [
          {
            "name": "root",
            "descript": "指定注册表根",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定键值",
            "detail": []
          },
          {
            "name": "value",
            "descript": "指定二进制数据",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 删除指定键值的数值\n     @param root 指定注册表根\n     @param key 指定键值\n     ",
      "deprecated": null,
      "static": "static",
      "async": null,
      "name": "del",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "root",
          "default": null
        },
        {
          "type": "String",
          "name": "key",
          "default": null
        }
      ],
      "doc": {
        "descript": "删除指定键值的数值",
        "detail": [],
        "params": [
          {
            "name": "root",
            "descript": "指定注册表根",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定键值",
            "detail": []
          }
        ]
      }
    }
  ],
  "collect": "System"
}