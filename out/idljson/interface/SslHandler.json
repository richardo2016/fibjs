{
  "declare": {
    "comments": "! @brief ssl 协议转换处理器\n\n 用以将数据流转换为 ssl 流协议。SslHandler 是对 SslSocket 的封装，用于构建服务器，逻辑上相当于：\n ```JavaScript\n var ss = new ssl.Socket(crt, key);\n\n function(s){\n    var s1 = ss.accept(s);\n    hdlr.invoke(s1);\n    s1.close();\n }\n ```\n ",
    "type": "interface",
    "name": "SslHandler",
    "extend": "Handler",
    "doc": {
      "descript": "ssl 协议转换处理器",
      "detail": [
        "用以将数据流转换为 ssl 流协议。SslHandler 是对 SslSocket 的封装，用于构建服务器，逻辑上相当于：",
        "```JavaScript",
        "var ss = new ssl.Socket(crt, key);",
        "",
        "function(s){",
        "   var s1 = ss.accept(s);",
        "   hdlr.invoke(s1);",
        "   s1.close();",
        "}",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "method",
      "comments": "! @brief SslHandler 构造函数，创建一个新的 SslHandler 对象\n\n    certs 格式为：\n    ```JavaScript\n    [\n        {\n            name: \"fibjs.org\",\n            crt: [X509Cert object],\n            key: [PKey object]\n        },\n        {\n            name: \"*.fibjs.org\",\n            crt: [X509Cert object],\n            key: [PKey object]\n        }\n    ]\n    ```\n    @param certs 服务器证书列表\n    @param hdlr 内置消息处理器，处理函数，链式处理数组，路由对象，详见 mq.Handler\n    ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "SslHandler",
      "type": null,
      "params": [
        {
          "type": "Array",
          "name": "certs",
          "default": null
        },
        {
          "type": "Handler",
          "name": "hdlr",
          "default": null
        }
      ],
      "doc": {
        "descript": "SslHandler 构造函数，创建一个新的 SslHandler 对象",
        "detail": [
          "certs 格式为：",
          "```JavaScript",
          "[",
          "    {",
          "        name: \"fibjs.org\",",
          "        crt: [X509Cert object],",
          "        key: [PKey object]",
          "    },",
          "    {",
          "        name: \"*.fibjs.org\",",
          "        crt: [X509Cert object],",
          "        key: [PKey object]",
          "    }",
          "]",
          "```"
        ],
        "params": [
          {
            "name": "certs",
            "descript": "服务器证书列表",
            "detail": []
          },
          {
            "name": "hdlr",
            "descript": "内置消息处理器，处理函数，链式处理数组，路由对象，详见 mq.Handler",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief SslHandler 构造函数，创建一个新的 SslHandler 对象\n      @param crt X509Cert 证书，用于客户端验证服务器\n      @param key PKey 私钥，用于与客户端会话\n      @param hdlr 内置消息处理器，处理函数，链式处理数组，路由对象，详见 mq.Handler\n     ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "SslHandler",
      "type": null,
      "params": [
        {
          "type": "X509Cert",
          "name": "crt",
          "default": null
        },
        {
          "type": "PKey",
          "name": "key",
          "default": null
        },
        {
          "type": "Handler",
          "name": "hdlr",
          "default": null
        }
      ],
      "doc": {
        "descript": "SslHandler 构造函数，创建一个新的 SslHandler 对象",
        "detail": [],
        "params": [
          {
            "name": "crt",
            "descript": "X509Cert 证书，用于客户端验证服务器",
            "detail": []
          },
          {
            "name": "key",
            "descript": "PKey 私钥，用于与客户端会话",
            "detail": []
          },
          {
            "name": "hdlr",
            "descript": "内置消息处理器，处理函数，链式处理数组，路由对象，详见 mq.Handler",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 设定证书验证模式，缺省为 VERIFY_NONE ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "verification",
      "type": "Integer",
      "doc": {
        "descript": "设定证书验证模式，缺省为 VERIFY_NONE",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 客户端证书验证证书链",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "ca",
      "type": "X509Cert",
      "doc": {
        "descript": "客户端证书验证证书链",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief ssl 协议转换处理器当前事件处理接口对象 ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "handler",
      "type": "Handler",
      "doc": {
        "descript": "ssl 协议转换处理器当前事件处理接口对象",
        "detail": [],
        "params": []
      }
    }
  ]
}