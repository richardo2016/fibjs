{
  "declare": {
    "comments": "! @brief http 协议转换处理器\n\n  用以将数据流转换为 http 协议消息，创建方式：\n  ```JavaScript\n  var hdlr = new mq.HttpHandler(...);\n  ```\n  或者：\n  ```JavaScript\n  var hdlr = new http.Handler(...);\n  ```\n ",
    "type": "interface",
    "name": "HttpHandler",
    "extend": "Handler",
    "doc": {
      "descript": "http 协议转换处理器",
      "detail": [
        "用以将数据流转换为 http 协议消息，创建方式：",
        "```JavaScript",
        "var hdlr = new mq.HttpHandler(...);",
        "```",
        "或者：",
        "```JavaScript",
        "var hdlr = new http.Handler(...);",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "method",
      "comments": "! @brief 创建一个 http 协议处理器对象，将流对象的数据转变为 http 消息对象\n    @param hdlr 内置消息处理器，处理函数，链式处理数组，路由对象，详见 mq.Handler\n    ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "HttpHandler",
      "type": null,
      "params": [
        {
          "type": "Handler",
          "name": "hdlr",
          "default": null
        }
      ],
      "doc": {
        "descript": "创建一个 http 协议处理器对象，将流对象的数据转变为 http 消息对象",
        "detail": [],
        "params": [
          {
            "name": "hdlr",
            "descript": "内置消息处理器，处理函数，链式处理数组，路由对象，详见 mq.Handler",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 允许跨域请求\n     @param allowHeaders 指定接受的 http 头字段\n     ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "enableCrossOrigin",
      "type": null,
      "params": [
        {
          "type": "String",
          "name": "allowHeaders",
          "default": {
            "value": "\"Content-Type\""
          }
        }
      ],
      "doc": {
        "descript": "允许跨域请求",
        "detail": [],
        "params": [
          {
            "name": "allowHeaders",
            "descript": "指定接受的 http 头字段",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和设置最大请求头个数，缺省为 128 ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "maxHeadersCount",
      "type": "Integer",
      "doc": {
        "descript": "查询和设置最大请求头个数，缺省为 128",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和设置 body 最大尺寸，以 MB 为单位，缺省为 64 ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "maxBodySize",
      "type": "Integer",
      "doc": {
        "descript": "查询和设置 body 最大尺寸，以 MB 为单位，缺省为 64",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和设置服务器名称，缺省为：fibjs/0.x.0 ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "serverName",
      "type": "String",
      "doc": {
        "descript": "查询和设置服务器名称，缺省为：fibjs/0.x.0",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief http 协议转换处理器当前事件处理接口对象 ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "handler",
      "type": "Handler",
      "doc": {
        "descript": "http 协议转换处理器当前事件处理接口对象",
        "detail": [],
        "params": []
      }
    }
  ]
}