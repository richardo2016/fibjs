{
  "declare": {
    "comments": "! @brief 对称加密算法对象\n\n Cipher 对象属于 crypto 模块，创建：\n ```JavaScript\n var c = new crypto.Cipher(crypto.AES, crypto.ECB, ...);\n ```\n ",
    "type": "interface",
    "name": "Cipher",
    "extend": "object",
    "doc": {
      "descript": "对称加密算法对象",
      "detail": [
        "Cipher 对象属于 crypto 模块，创建：",
        "```JavaScript",
        "var c = new crypto.Cipher(crypto.AES, crypto.ECB, ...);",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "method",
      "comments": "! @brief Cipher 构造函数，仅用于 ARC4 初始化\n     @param provider 指定加密算法\n     @param key 指定加密解密密码\n    ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "Cipher",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "provider",
          "default": null
        },
        {
          "type": "Buffer",
          "name": "key",
          "default": null
        }
      ],
      "doc": {
        "descript": "Cipher 构造函数，仅用于 ARC4 初始化",
        "detail": [],
        "params": [
          {
            "name": "provider",
            "descript": "指定加密算法",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定加密解密密码",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief Cipher 构造函数\n     @param provider 指定加密算法\n     @param mode 指定分组密码工作模式\n     @param key 指定加密解密密码\n    ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "Cipher",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "provider",
          "default": null
        },
        {
          "type": "Integer",
          "name": "mode",
          "default": null
        },
        {
          "type": "Buffer",
          "name": "key",
          "default": null
        }
      ],
      "doc": {
        "descript": "Cipher 构造函数",
        "detail": [],
        "params": [
          {
            "name": "provider",
            "descript": "指定加密算法",
            "detail": []
          },
          {
            "name": "mode",
            "descript": "指定分组密码工作模式",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定加密解密密码",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief Cipher 构造函数\n     @param provider 指定加密算法\n     @param mode 指定分组密码工作模式\n     @param key 指定加密解密密码\n     @param iv 指定初始向量\n    ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "Cipher",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "provider",
          "default": null
        },
        {
          "type": "Integer",
          "name": "mode",
          "default": null
        },
        {
          "type": "Buffer",
          "name": "key",
          "default": null
        },
        {
          "type": "Buffer",
          "name": "iv",
          "default": null
        }
      ],
      "doc": {
        "descript": "Cipher 构造函数",
        "detail": [],
        "params": [
          {
            "name": "provider",
            "descript": "指定加密算法",
            "detail": []
          },
          {
            "name": "mode",
            "descript": "指定分组密码工作模式",
            "detail": []
          },
          {
            "name": "key",
            "descript": "指定加密解密密码",
            "detail": []
          },
          {
            "name": "iv",
            "descript": "指定初始向量",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 返回当前算法名称 ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "name",
      "type": "String",
      "doc": {
        "descript": "返回当前算法名称",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 返回当前算法密码长度，以位为单位 ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "keySize",
      "type": "Integer",
      "doc": {
        "descript": "返回当前算法密码长度，以位为单位",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 返回当前算法初始向量长度，以字节为单位 ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "ivSize",
      "type": "Integer",
      "doc": {
        "descript": "返回当前算法初始向量长度，以字节为单位",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 返回当前算法数据块长度，以字节为单位 ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "blockSize",
      "type": "Integer",
      "doc": {
        "descript": "返回当前算法数据块长度，以字节为单位",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用填充模式\n     @param mode 指定填充模式，缺省为 PADDING_PKCS7\n     ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "paddingMode",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "mode",
          "default": null
        }
      ],
      "doc": {
        "descript": "使用填充模式",
        "detail": [],
        "params": [
          {
            "name": "mode",
            "descript": "指定填充模式，缺省为 PADDING_PKCS7",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用当前算法密码加密数据\n     @param data 指定要加密的数据\n     @return 返回加密后的数据\n     ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "encrypt",
      "type": "Buffer",
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        }
      ],
      "doc": {
        "descript": "使用当前算法密码加密数据",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "指定要加密的数据",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回加密后的数据",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 使用当前算法密码解密数据\n     @param data 指定要解密的数据\n     @return 返回解密后的数据\n     ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "decrypt",
      "type": "Buffer",
      "params": [
        {
          "type": "Buffer",
          "name": "data",
          "default": null
        }
      ],
      "doc": {
        "descript": "使用当前算法密码解密数据",
        "detail": [],
        "params": [
          {
            "name": "data",
            "descript": "指定要解密的数据",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回解密后的数据",
          "detail": []
        }
      }
    }
  ]
}