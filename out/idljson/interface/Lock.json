{
  "declare": {
    "comments": "! @brief 纤程锁对象\n\n 不同于操作系统的锁，纤程锁是纯逻辑实现，加锁与解锁负荷很小\n ```JavaScript\n var l = new coroutine.Lock();\n l.acquire();\n .....\n l.release();\n ```\n ",
    "type": "interface",
    "name": "Lock",
    "extend": "object",
    "doc": {
      "descript": "纤程锁对象",
      "detail": [
        "不同于操作系统的锁，纤程锁是纯逻辑实现，加锁与解锁负荷很小",
        "```JavaScript",
        "var l = new coroutine.Lock();",
        "l.acquire();",
        ".....",
        "l.release();",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "method",
      "comments": "! @brief 构造函数",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "Lock",
      "type": null,
      "params": null,
      "doc": {
        "descript": "构造函数",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 获取锁的拥有权\n\n     acquire 方法用于获取锁的拥有权，当锁处于可获取状态时，此方法立即返回 true。\n\n     当锁不可获取，且 blocking 为 true，则当前纤程进入休眠，当其他纤程释放锁后，此方法返回 true。\n\n     当锁不可获取，且 blocking 为 false，则方法返回 false。\n     @param blocking 指定是否等待，为 true 时等待，缺省为真\n     @return 返回是否成功获取锁，为 true 表示成功获取\n     ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "acquire",
      "type": "Boolean",
      "params": [
        {
          "type": "Boolean",
          "name": "blocking",
          "default": {
            "value": "true"
          }
        }
      ],
      "doc": {
        "descript": "获取锁的拥有权",
        "detail": [
          "acquire 方法用于获取锁的拥有权，当锁处于可获取状态时，此方法立即返回 true。",
          "",
          "当锁不可获取，且 blocking 为 true，则当前纤程进入休眠，当其他纤程释放锁后，此方法返回 true。",
          "",
          "当锁不可获取，且 blocking 为 false，则方法返回 false。"
        ],
        "params": [
          {
            "name": "blocking",
            "descript": "指定是否等待，为 true 时等待，缺省为真",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回是否成功获取锁，为 true 表示成功获取",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 释放锁的拥有权\n\n     此方法将释放对锁的拥有权，如果当前纤程未拥有锁，此方法将抛出错误。\n     ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "release",
      "type": null,
      "params": null,
      "doc": {
        "descript": "释放锁的拥有权",
        "detail": [
          "此方法将释放对锁的拥有权，如果当前纤程未拥有锁，此方法将抛出错误。"
        ],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 查询当前等待任务数\n     @return 返回任务数\n     ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "count",
      "type": "Integer",
      "params": null,
      "doc": {
        "descript": "查询当前等待任务数",
        "detail": [],
        "params": [],
        "return": {
          "descript": "返回任务数",
          "detail": []
        }
      }
    }
  ]
}