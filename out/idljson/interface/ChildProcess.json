{
  "declare": {
    "comments": "! @brief 子进程对象\n\n ```JavaScript\n var child_process = require(\"child_process\");\n var child = child_process.spawn(\"ls\");\n ```\n ",
    "type": "interface",
    "name": "ChildProcess",
    "extend": "EventEmitter",
    "doc": {
      "descript": "子进程对象",
      "detail": [
        "```JavaScript",
        "var child_process = require(\"child_process\");",
        "var child = child_process.spawn(\"ls\");",
        "```"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "method",
      "comments": "! @brief 杀掉当前对象指向的进程，并传递信号\n      @param signal 传递的信号\n     ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "kill",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "signal",
          "default": null
        }
      ],
      "doc": {
        "descript": "杀掉当前对象指向的进程，并传递信号",
        "detail": [],
        "params": [
          {
            "name": "signal",
            "descript": "传递的信号",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 等待当前对象指向的进程结束，并返回进程结束代码\n      @return 进程的结束代码\n     ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "join",
      "type": null,
      "params": null,
      "doc": {
        "descript": "等待当前对象指向的进程结束，并返回进程结束代码",
        "detail": [],
        "params": [],
        "return": {
          "descript": "进程的结束代码",
          "detail": []
        }
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 读取当前对象指向的进程的 id\n     ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "pid",
      "type": "Integer",
      "doc": {
        "descript": "读取当前对象指向的进程的 id",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和设置当前进程的退出码 ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "exitCode",
      "type": "Integer",
      "doc": {
        "descript": "查询和设置当前进程的退出码",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 读取当前对象指向的进程的标准输入对象\n     ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "stdin",
      "type": "Stream",
      "doc": {
        "descript": "读取当前对象指向的进程的标准输入对象",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 读取当前对象指向的进程的标准输出对象\n     ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "stdout",
      "type": "Stream",
      "doc": {
        "descript": "读取当前对象指向的进程的标准输出对象",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 读取当前对象指向的进程的标准错误对象\n     ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "stderr",
      "type": "Stream",
      "doc": {
        "descript": "读取当前对象指向的进程的标准错误对象",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和绑定进程退出事件，相当于 on(\"exit\", func); ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "onexit",
      "type": "Function",
      "doc": {
        "descript": "查询和绑定进程退出事件，相当于 on(\"exit\", func);",
        "detail": [],
        "params": []
      }
    }
  ]
}