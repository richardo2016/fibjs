{
  "declare": {
    "comments": "! @brief 浏览器窗口对象\n WebView 是一个嵌入浏览器的窗口组件，目前仅支持 windows, macOS(10.10+). 在 windows 使用 IE/Edge 内核, 在 macOS 使用 WKWebView.\n \n 由于 WebView 内的 JavaScript 程序与 fibjs 并不在同一个引擎内，所以如果需要与宿主程序进行通讯，需要通过消息进行。\n\n WebView 用于通讯的对象是 external，external 支持一个方法 postMessage 和两个事件 onmessage、onclose。\n\n 一个简单的通讯示例代码如下：\n ```JavaScript \n // index.js\n var gui = require('gui');\n var webview = gui.open('fs://index.html');\n\n webview.onmessage = msg => console.log(msg);\n \n webview.onload = evt => webview.postMessage(\"hello from fibjs\");\n\n webview.wait();\n ```\n\n index.html 的内容如下：\n ```html\n <script>\n     external.onclose = function() {\n     }\n\n     external.onmessage = function(msg){ \n         external.postMessage(\"send back: \" + msg);\n     };\n </script>\n ```\n \n在用户窗口关闭之前，会触发 external.onclose 事件，external.onclose 可以决定是否关闭。如果 external.onclose 返回 false，则此次操作取消，否则将关闭窗口。\n\n 以下的例子，会在用户点关闭后等待 5 秒后再关闭窗口。\n ```html\n <script lang=\"JavaScript\">\n     var bClose = false;\n     external.onclose = function () {\n         if (!bClose) {\n             setTimeout(function () {\n                 bClose = true;\n                 window.close();\n             }, 5000);\n             return false;\n         }\n     }\n </script>\n ```\n 上面的代码中，因为 window.close 本身也会触发 onclose 事件，所以需要增加一个开关变量，用于识别是否需要处理此次事件。\n ",
    "type": "interface",
    "name": "WebView",
    "extend": "EventEmitter",
    "doc": {
      "descript": "浏览器窗口对象",
      "detail": [
        "WebView 是一个嵌入浏览器的窗口组件，目前仅支持 windows, macOS(10.10+). 在 windows 使用 IE/Edge 内核, 在 macOS 使用 WKWebView.",
        "",
        "由于 WebView 内的 JavaScript 程序与 fibjs 并不在同一个引擎内，所以如果需要与宿主程序进行通讯，需要通过消息进行。",
        "",
        "WebView 用于通讯的对象是 external，external 支持一个方法 postMessage 和两个事件 onmessage、onclose。",
        "",
        "一个简单的通讯示例代码如下：",
        "```JavaScript",
        "// index.js",
        "var gui = require('gui');",
        "var webview = gui.open('fs://index.html');",
        "",
        "webview.onmessage = msg => console.log(msg);",
        "",
        "webview.onload = evt => webview.postMessage(\"hello from fibjs\");",
        "",
        "webview.wait();",
        "```",
        "",
        "index.html 的内容如下：",
        "```html",
        "<script>",
        "    external.onclose = function() {",
        "    }",
        "",
        "    external.onmessage = function(msg){",
        "        external.postMessage(\"send back: \" + msg);",
        "    };",
        "</script>",
        "```",
        "",
        "在用户窗口关闭之前，会触发 external.onclose 事件，external.onclose 可以决定是否关闭。如果 external.onclose 返回 false，则此次操作取消，否则将关闭窗口。",
        "",
        "以下的例子，会在用户点关闭后等待 5 秒后再关闭窗口。",
        "```html",
        "<script lang=\"JavaScript\">",
        "    var bClose = false;",
        "    external.onclose = function () {",
        "        if (!bClose) {",
        "            setTimeout(function () {",
        "                bClose = true;",
        "                window.close();",
        "            }, 5000);",
        "            return false;",
        "        }",
        "    }",
        "</script>",
        "```",
        "上面的代码中，因为 window.close 本身也会触发 onclose 事件，所以需要增加一个开关变量，用于识别是否需要处理此次事件。"
      ],
      "params": []
    }
  },
  "members": [
    {
      "memType": "method",
      "comments": "! @brief 加载指定 url 的页面\n\t @param url 指定的 url\n\t ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "loadUrl",
      "type": null,
      "params": [
        {
          "type": "String",
          "name": "url",
          "default": null
        }
      ],
      "doc": {
        "descript": "加载指定 url 的页面",
        "detail": [],
        "params": [
          {
            "name": "url",
            "descript": "指定的 url",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 查询当前页面的 url\n\t @return 返回当前页面的 url\n\t ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "getUrl",
      "type": "String",
      "params": null,
      "doc": {
        "descript": "查询当前页面的 url",
        "detail": [],
        "params": [],
        "return": {
          "descript": "返回当前页面的 url",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 设置 webview 的页面 html\n\t @param html 设置的 html\n\t ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "setHtml",
      "type": null,
      "params": [
        {
          "type": "String",
          "name": "html",
          "default": null
        }
      ],
      "doc": {
        "descript": "设置 webview 的页面 html",
        "detail": [],
        "params": [
          {
            "name": "html",
            "descript": "设置的 html",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 刷新当前页面 ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "reload",
      "type": null,
      "params": null,
      "doc": {
        "descript": "刷新当前页面",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 退回到上一个页面 ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "goBack",
      "type": null,
      "params": null,
      "doc": {
        "descript": "退回到上一个页面",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 前进到下一个页面 ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "goForward",
      "type": null,
      "params": null,
      "doc": {
        "descript": "前进到下一个页面",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 打印当前窗口文档\n\t @param mode 打印参数，0: 快速打印; 1: 标准打印; 2: 打印预览。缺省为 1\n\t ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "print",
      "type": null,
      "params": [
        {
          "type": "Integer",
          "name": "mode",
          "default": {
            "value": "1"
          }
        }
      ],
      "doc": {
        "descript": "打印当前窗口文档",
        "detail": [],
        "params": [
          {
            "name": "mode",
            "descript": "打印参数，0: 快速打印; 1: 标准打印; 2: 打印预览。缺省为 1",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 打印当前窗口文档到 PDF 文件\n\t @param file 指定 pdf 路径\n\t ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "printToPDF",
      "type": null,
      "params": [
        {
          "type": "String",
          "name": "file",
          "default": null
        }
      ],
      "doc": {
        "descript": "打印当前窗口文档到 PDF 文件",
        "detail": [],
        "params": [
          {
            "name": "file",
            "descript": "指定 pdf 路径",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 在当前窗口运行一段 JavaScript 代码\n\t @param code 指定要执行的 JavaScript 代码\n\t ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "executeJavaScript",
      "type": null,
      "params": [
        {
          "type": "String",
          "name": "code",
          "default": null
        }
      ],
      "doc": {
        "descript": "在当前窗口运行一段 JavaScript 代码",
        "detail": [],
        "params": [
          {
            "name": "code",
            "descript": "指定要执行的 JavaScript 代码",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 在当前窗口执行 DevTools 命令，并返回结果\n\t @param method 指定要执行的 DevTools 命令\n     @param params 指定命令的参数\n     @return 返回执行的结果\n\t ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "executeDevToolsMethod",
      "type": "Variant",
      "params": [
        {
          "type": "String",
          "name": "method",
          "default": null
        },
        {
          "type": "Object",
          "name": "params",
          "default": {
            "value": "v8::Object::New(isolate)"
          }
        }
      ],
      "doc": {
        "descript": "在当前窗口执行 DevTools 命令，并返回结果",
        "detail": [],
        "params": [
          {
            "name": "method",
            "descript": "指定要执行的 DevTools 命令",
            "detail": []
          },
          {
            "name": "params",
            "descript": "指定命令的参数",
            "detail": []
          }
        ],
        "return": {
          "descript": "返回执行的结果",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 关闭当前窗口 ",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "close",
      "type": null,
      "params": null,
      "doc": {
        "descript": "关闭当前窗口",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 向 webview 内发送消息\n     postMessage 需要在窗口加载完成后发送消息，在此之前发送的消息会丢失。因此建议在 onload 事件触发后再调用此方法。\n\t @param msg 要发送的消息\n\t",
      "deprecated": null,
      "static": null,
      "async": "async",
      "name": "postMessage",
      "type": null,
      "params": [
        {
          "type": "String",
          "name": "msg",
          "default": null
        }
      ],
      "doc": {
        "descript": "向 webview 内发送消息",
        "detail": [
          "     postMessage 需要在窗口加载完成后发送消息，在此之前发送的消息会丢失。因此建议在 onload 事件触发后再调用此方法。"
        ],
        "params": [
          {
            "name": "msg",
            "descript": "要发送的消息",
            "detail": []
          }
        ]
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 当前窗口的 WebView 引擎 ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "type",
      "type": "String",
      "doc": {
        "descript": "当前窗口的 WebView 引擎",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief DevTools 访问对象，调用接口参见：https://chromedevtools.github.io/devtools-protocol/ ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "dev",
      "type": "Value",
      "doc": {
        "descript": "DevTools 访问对象，调用接口参见：https://chromedevtools.github.io/devtools-protocol/",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和绑定加载成功事件，相当于 on(\"open\", func); ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "onopen",
      "type": "Function",
      "doc": {
        "descript": "查询和绑定加载成功事件，相当于 on(\"open\", func);",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和绑定加载成功事件，相当于 on(\"load\", func); ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "onload",
      "type": "Function",
      "doc": {
        "descript": "查询和绑定加载成功事件，相当于 on(\"load\", func);",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和绑定页面地址变化事件，相当于 on(\"address\", func); ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "onaddress",
      "type": "Function",
      "doc": {
        "descript": "查询和绑定页面地址变化事件，相当于 on(\"address\", func);",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和绑定页面标题改变事件，相当于 on(\"title\", func); ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "ontitle",
      "type": "Function",
      "doc": {
        "descript": "查询和绑定页面标题改变事件，相当于 on(\"title\", func);",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和绑定窗口移动事件，相当于 on(\"move\", func); \n\n\t 以下示例会在窗口移动时输出窗口的左上角坐标：\n\t ```JavaScript \n\t var gui = require('gui');\n\t var webview = gui.open('fs://index.html');\n\n\t webview.onmove = evt => console.log(evt.left, evt.top);\n\t ```\n\t",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "onmove",
      "type": "Function",
      "doc": {
        "descript": "查询和绑定窗口移动事件，相当于 on(\"move\", func);",
        "detail": [
          "以下示例会在窗口移动时输出窗口的左上角坐标：",
          "```JavaScript",
          "var gui = require('gui');",
          "var webview = gui.open('fs://index.html');",
          "",
          "webview.onmove = evt => console.log(evt.left, evt.top);",
          "```"
        ],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和绑定窗口尺寸改变事件，相当于 on(\"size\", func);\n\n     以下示例会在窗口改变大小时输出窗口的尺寸：\n     ```JavaScript\n     var gui = require('gui');\n     var webview = gui.open('fs://index.html');\n\n     webview.onresize = evt => console.log(evt.width, evt.height);\n     ```\n\t",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "onresize",
      "type": "Function",
      "doc": {
        "descript": "查询和绑定窗口尺寸改变事件，相当于 on(\"size\", func);",
        "detail": [
          "以下示例会在窗口改变大小时输出窗口的尺寸：",
          "```JavaScript",
          "var gui = require('gui');",
          "var webview = gui.open('fs://index.html');",
          "",
          "webview.onresize = evt => console.log(evt.width, evt.height);",
          "```"
        ],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和绑定窗口关闭事件，WebView 关闭后会触发此时间，相当于 on(\"closed\", func); ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "onclosed",
      "type": "Function",
      "doc": {
        "descript": "查询和绑定窗口关闭事件，WebView 关闭后会触发此时间，相当于 on(\"closed\", func);",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 查询和绑定接受 webview 内 postMessage 消息事件，相当于 on(\"message\", func); ",
      "deprecated": null,
      "static": null,
      "readonly": null,
      "name": "onmessage",
      "type": "Function",
      "doc": {
        "descript": "查询和绑定接受 webview 内 postMessage 消息事件，相当于 on(\"message\", func);",
        "detail": [],
        "params": []
      }
    }
  ]
}