{
  "declare": {
    "comments": "! @brief HeapGraphEdge表示两个HeapGraphNode节点间的关联，从上游节点到下游节点",
    "type": "interface",
    "name": "HeapGraphEdge",
    "extend": "object",
    "doc": {
      "descript": "HeapGraphEdge表示两个HeapGraphNode节点间的关联，从上游节点到下游节点",
      "detail": [],
      "params": []
    }
  },
  "members": [
    {
      "memType": "prop",
      "comments": "! @brief 下游节点的链接方式，可能的值：\n     - profiler.Edge_ContextVariable,  函数中的变量\n     - profiler.Edge_Element,          数组中的元素\n     - profiler.Edge_Property,         有名对象的属性\n     - profiler.Edge_Internal,         JS无法进入的链接\n     - profiler.Edge_Hidden,           指向需要事先计算出空间大小的节点\n     - profiler.Edge_Shortcut,         指向无法事先计算出空间大小的节点\n     - profiler.Edge_Weak,             一个弱引用（被GC忽视）\n    ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "type",
      "type": "Integer",
      "doc": {
        "descript": "下游节点的链接方式，可能的值：",
        "detail": [
          "- profiler.Edge_ContextVariable,  函数中的变量",
          "- profiler.Edge_Element,          数组中的元素",
          "- profiler.Edge_Property,         有名对象的属性",
          "- profiler.Edge_Internal,         JS无法进入的链接",
          "- profiler.Edge_Hidden,           指向需要事先计算出空间大小的节点",
          "- profiler.Edge_Shortcut,         指向无法事先计算出空间大小的节点",
          "- profiler.Edge_Weak,             一个弱引用（被GC忽视）"
        ],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 链接名称 ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "name",
      "type": "String",
      "doc": {
        "descript": "链接名称",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "prop",
      "comments": "! @brief 链接的描述 ",
      "deprecated": null,
      "static": null,
      "readonly": "readonly",
      "name": "description",
      "type": "String",
      "doc": {
        "descript": "链接的描述",
        "detail": [],
        "params": []
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 获取HeapGraphEdge的上游HeapGraphNode节点\n     @return 返回源HeapGraphNode节点\n    ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "getFromNode",
      "type": "HeapGraphNode",
      "params": null,
      "doc": {
        "descript": "获取HeapGraphEdge的上游HeapGraphNode节点",
        "detail": [],
        "params": [],
        "return": {
          "descript": "返回源HeapGraphNode节点",
          "detail": []
        }
      }
    },
    {
      "memType": "method",
      "comments": "! @brief 获取HeapGraphEdge的下游HeapGraphNode节点\n     @return 返回目的HeapGraphNode节点\n    ",
      "deprecated": null,
      "static": null,
      "async": null,
      "name": "getToNode",
      "type": "HeapGraphNode",
      "params": null,
      "doc": {
        "descript": "获取HeapGraphEdge的下游HeapGraphNode节点",
        "detail": [],
        "params": [],
        "return": {
          "descript": "返回目的HeapGraphNode节点",
          "detail": []
        }
      }
    }
  ]
}